[[!meta title="Making rootfs development iterations faster"]]


Webconverger relies on Debian Live to put the ISO together. For the reason and
others, please create an Unstable <abbr title="Still in
Development">sid</abbr>-chroot like so in `~/debian`:

	sudo debootstrap sid sid-root http://cdn.debian.net/debian/

[debootstrap](http://aur.archlinux.org/packages.php?ID=2970) in available in other Linux distros like Archlinux.

Then `apt-get install live-build` etcetera.

In `~/debian/sid-root/root/` I have a copy of <https://github.com/Webconverger/Debian-Live-config>

	x220:~$ grep Live debian/sid-root/root/.git/config 
	url = git@github.com:Webconverger/Debian-Live-config.git

And then:

	x220:~$ cat debian/sid-root/root/webconverger/chroot/.git/config 
	[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
	[remote "origin"]
	fetch = +refs/heads/*:refs/remotes/origin/*
	url = git://github.com/Webconverger/webc.git

	[remote "up"]
	fetch = +refs/heads/*:refs/remotes/origin/*
	url = git@github.com:/Webconverger/webc.git

	[branch "master"]
	remote = origin
	merge = refs/heads/master
	x220:~$ 

Having a seperate remote **up** allows you to pull from the **chroot** from the
un-authenticated url <git://github.com/Webconverger/webc.git>

Next I've created a few silly aliases to help me navigate around that structure:

	alias c="sudo chroot /home/hendry/debian/sid-root/root/webconverger
	/chroot"
	alias b="sudo chroot /home/hendry/debian/sid-root"
	alias i="cd /home/hendry/debian/sid-root/root/webconverger"
	up() {
	cd ~/debian/sid-root/root/webconverger/chroot
	git push up
}

# Work flow

If you can think of optimisations, please let me know! Lets assume for example I'm tweaking
<https://github.com/Webconverger/webc/blob/master/etc/webc/webc.conf>.

First I go, `c` which chroots me into [webc
rootfs](https://github.com/Webconverger/webc/blob/master/etc/webc). I make an
edit. And exit the terminal.

Then I go `b` to get into the Debian sid-chroot with [Debian Live build
script](https://github.com/Webconverger/Debian-Live-config). I run `make` and
builds the ISO.

Once the ISO is built I launch [[Virtualbox|testing]] and test the ISO
filename, which should be described by its **last committed** git log hash. So if
you made a change you are testing and your rootfs is "dirty", the filename does
not change.

Assuming the edit does as intended, you then need to commit the change by
logging into the chroot with `c` and commiting it. Feel free to setup your [git
user and
email](http://help.github.com/set-your-user-name-email-and-github-token/). Exit
the terminal and now you need to push the change back as the host's system
user.

Execute `up` which pushes the change to github using the authenticated URL.

To kick off a build with your change, I have a script, which kicks off a build in my home directory:

	hb() {
	ssh hetty "cd ~/Debian-Live-config/webconverger; sudo make -f ~/Debian-Live-config/webconverger/Makefile deploy"
	}

After running it the newly committed hash should appear as a daily build ISO at <http://build.webconverger.org/>
