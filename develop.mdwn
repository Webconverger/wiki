[[!meta title="Develop Webconverger"]]


* [Report and view bugs](https://github.com/Webconverger/webc/issues)
* [[Core_concepts|design]]
* [Webconverger Debian Live configuration](https://github.com/Webconverger/Debian-Live-config)
* [Official Webconverger package repository](http://debian.webconverger.com)
* [Webconverger daily builds](http://build.webconverger.org/) - [build script sources](http://git.webconverger.org/?p=build)
* [[Webconverger_in_your_locale|i18n]]
* [[Artwork]]
* [[Firefox_extension_development|Kiosk]]
* [Debian Live project](http://debian-live.alioth.debian.org/) and [Live helper packages](http://live.debian.net/)
* [[Howto_hide_boot_menu|blog/entry/cmdline_lock_down]]
* [[Howto_add_Java|Java]]
* [[Howto_integrate_nvidia_drivers|nvidia]]
* [[Customising_cronjob|cronjob]]
* [[Using_PXEBOOT_for_deployment|pxeboot]]
* Webconverger uses [Progress](http://progress-linux.org) (Artax) backports
* How we plan to do [[upgrades_with_git|upgrade]] **HOT**

If you are new to the project, **Welcome**! Please help by [[testing]]. Thank you!

<div class="notebox"> The Webconverger distribution is <a
href="http://src.webconverger.com/">opensource</a> (notable exceptions are
non-free wireless firmware and [[flash|adobe]]), but you <b>must</b> understand that the
branding (logo and the name "Webconverger") are <b>proprietary</b>. Only
Webconverger built images should display the logo and can be sold as
"Webconverger". Thank you.</div>

## Building on a Debian system:

Building an image from scratch is usually only necessary if you need to
customise the image's packages. The [[boot_API|boot]] should be sufficient for
most of your needs.

1. Download and install the **latest**
[live-build](http://packages.qa.debian.org/l/live-build.html) from the [Debian
Unstable repository](http://packages.qa.debian.org/l/live-build.html).

1. `git clone git://github.com/Webconverger/Debian-Live-config.git`
1. `cd Debian-Live-config/webconverger/`
1. Take a long good look at [auto/config](https://github.com/Webconverger/Debian-Live-config/blob/master/webconverger/auto/config)
1. `make`

These steps are formalised in the daily build process's [build.sh](https://github.com/Webconverger/dailybuild/blob/master/build.sh).

It is recommend you build from a [[chroot]] and invest some time to setup your development environment.

Next use this [[testing_guide|testing]] on your freshly built image.

## If the build doesn't work

* Check with the latest [daily build](http://build.webconverger.org/) logs. Compare them.
* Make sure you build as root since the [rootfs](https://github.com/Webconverger/webc/) permissions can be fragile

## Debugging mode with the built Webconverger image

Debugging in Webconverger simply involves appending `debug` to the [[boot]] options. The window manager is [dwm](http://dwm.suckless.org/tutorial).

## Customising the ISO hybrid image

Simple permanent boot customisation steps without building the ISO from scratch
are the following root commands:

	mount -o loop webc-9.0.iso /mnt/webc/
	rsync -av /mnt/webc/ /mnt/custom/
	chmod +w /mnt/custom/isolinux/live.cfg

Now edit `/mnt/custom/isolinux/live.cfg` and change the [[boot]] command line
with your homepage URL.

Now rebuild the ISO like so:

	sudo genisoimage -J -l -cache-inodes -allow-multidot -no-emul-boot -boot-load-size 4 -boot-info-table -r -b isolinux/isolinux.bin -c isolinux/boot.cat -o custom.iso /mnt/custom/

Hint: If you are an Archlinux user, `genisoimage` can be found in the `cdrkit` package.

Finally:

	isohybrid custom.iso

`isohybrid` comes from a recent version of [syslinux](http://packages.debian.org/unstable/syslinux-common)

The [customisation service](http://webconverger.com/buy) remains if you are
unable to perform these commands or you simply just want a painless
configuration service whilst support this project.
