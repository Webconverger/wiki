[[!meta title="Develop Webconverger"]]

* [[Core_concepts|design]]
* [Webconverger live-helper configuration](http://git.debian.org/?p=debian-live/config-webc.git)
* [Official Webconverger package repository](http://debian.webconverger.com)
* [Webconverger git repositories](http://git.webconverger.org/)
* [Webconverger daily builds](http://build.webconverger.org/) - [build script sources](http://git.webconverger.org/?p=build)
* [[Webconverger_in_your_locale|i18n]]
* [[Artwork]]
* [[Firefox_extension_development|Kiosk]]
* [Debian Live project](http://debian-live.alioth.debian.org/) and [Live helper packages](http://live.debian.net/)
* [live-config lists the boot parameters](http://live.debian.net/gitweb?p=live-config.git;a=blob;f=manpages/en/live-config.7). Also see [[boot]].
* [[Howto_add_Java|Java]]

If you are new to the project, **Welcome**! Please help by [[testing]]. Thank you!

## Building on a Debian system:

Building an image from scratch is usually only necessary if you need to
customise the image's packages [[chrome|kiosk]] typically.

You can use the [[guide|usb]] to persistently change [[boot]] options **without
building**.

1. Download and install the **latest**
[live-helper](http://live.debian.net/devel/live-helper/) from the Debian
Live repository. Add the following lines to your `/etc/apt/sources.list`:

	deb http://live.debian.net/ sid-snapshots main contrib non-free
	deb-src http://live.debian.net/ sid-snapshots main contrib non-free

1. `git clone git://git.debian.org/git/debian-live/config-webc.git`
1. Take a long good look at [auto/config](http://git.debian.org/?p=debian-live/config-webc.git;a=blob;f=webconverger/auto/config)
1. `lh config` to setup the configuration (this is the new live-helper 'autoconfig' style)
1. `sudo lh build` in webconverger/ to kick off the long build process

These steps are formalised in the daily build process's [build.sh](http://git.webconverger.org/?p=build;a=blob;f=build.sh).

Next use this [[test_guide|testing]] on your freshly built image.

1. [[todo]] has a list of bugs that need to be fixed. Please help Webconverger out and you will be [[acknowledged|acknowledgements]] for your contribution.
1. Join the [Debian Live](http://debian-live.alioth.debian.org/) community. Peruse the [debian-live mailing list archives](http://lists.debian.org/debian-live/). :)

## Debugging mode with the built Webconverger image

Debugging in Webconverger simply involves removing `noroot` from the [[boot]] options. The window manager is [dwm](http://dwm.suckless.org/tutorial).

# Hacking the USB [[boot]]
The reason why [Webconverger has a commercial customisation
service](http://webconverger.com/buy) is that it used to be very difficult to
make trivial changes to the [[boot_command_line|boot]].

The iso-hybrid format used on the newer releases makes the file system on your USB install read only, and is thus more cumbersome to modify. If you make your own build you can make it in the .img format which leaves the file system writable. This section has two parts, the first about modifying the standard iso-hybrid, the other about modifying the .img format.

## Customising the ISO hybrid image

Simple permanent boot customisation steps without building the ISO from scratch
are the following root commands

	mount -o loop webc-9.0.iso /mnt/webc/
	rsync -av /mnt/webc/ /mnt/custom/
	chmod +w /mnt/custom/isolinux/live.cfg

Now edit `/mnt/custom/isolinux/live.cfg` and change the [[boot]] command line
with your homepage URL.

Now rebuild the ISO like so:

	sudo genisoimage -J -l -cache-inodes -allow-multidot -no-emul-boot -boot-load-size 4 -boot-info-table -r -b isolinux/isolinux.bin -c isolinux/boot.cat -o custom.iso /mnt/custom/

Hint: If you are an Archlinux user, `genisoimage` can be found in the `cdrkit` package.

Finally:

	isohybrid custom.iso

`isohybrid` comes from a recent version of [syslinux](http://packages.debian.org/unstable/syslinux-common)

The [customisation service](http://webconverger.com/buy) remains if you are
unable to perform these commands.  It's also difficult to edit the package
listing, such as changing [[chrome|kiosk]] without the
[service](http://webconverger.com/buy) still. For [[large_deployments|press]],
please enquire with sales in how we can help you.

## Customising .img-installs

This only works on a `lb config -b usb-hdd` type **.img**.

Plug your Webconverger USB stick in and mount the USB stick, for e.g.:

	x61:~% sudo mount /dev/sdb1 /mnt/usb

Edit the live.cfg. Alter elements like the [[homepage]].

	x61:/mnt/usb% sudo vim syslinux/live.cfg

Unmount and boot up your system:

	x61:/mnt/usb% cd
	x61:~% sudo umount /mnt/usb

# Disable boot menu entirely

A common [customisation request](http://webconverger.com/buy/) is to disable
the [[boot_menu|boot]], in order to make this Web client tamper proof on boot
up. However users should not be put infront of a booting Webconverger to begin
with for best user experience.

You can edit `isolinux/isolinux.cfg` on the USB image to look something like:

	default linux
	label linux
		kernel /live/vmlinuz1
		append initrd=/live/initrd1.img boot=live quiet homepage=http://portal.webconverger.com/ nonetworking splash vga=current username=webc hostname=webconverger union=aufs

## Commercial customizing service

UK based Webconverger Limited offers a build service of the above at
[Webconverger.com/buy](http://webconverger.com/buy). We also test the image
and offer a no-quibble money back guarantee.
