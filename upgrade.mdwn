We are designing the upgrade mechanism for:

* Efficiency - We use _next level_ technology [git](http://git-scm.com/) to manage the entire root filesystem
* Help Webconverger Limited the business [to move effectively to a subscription model](http://webconverger.org/blog/entry/Webconverger_11.2_release_notes/)
* We can easily check the integrity of the filesystem, good for [[security]]
* Git is fast & efficient for upgrades, also good for [[security]]

# The upgrade features requires persistently

* USB-HDD (.img) version which can upgrade itself or do a HD install
* ISO (.iso) version which can ONLY do a HD Install

## Upgrade process

Webconverger uses git to maintain the [filesystem](https://github.com/Webconverger/webc).

1. Webconverger downloads a config and looks for `fetch-revision=BRANCH`, otherwise defaults to <https://github.com/Webconverger/webc/tree/master>
2. On boot it fetches upto that branch, unless `update_revision=SHA` is specified, which is used for debugging
3. If there is an update, the kernels upon /live/image/live are updated and a new git-revision based on the fetch branch is applied
4. On **REBOOT** the script `/usr/share/initramfs-tools/scripts/live` in the initrd [git-fs](https://github.com/Webconverger/git-fs) mounts the git-revision SHA1 set upon the `/proc/cmdline`

In future we hope to utilise the boot-once option in extlinux, where by if the
machine failed to boot from a kernel error, a subsequent boot will revert to
the previous "known working" git-revision and kernel.

# Two reboots for an update, ~48hr delay

Webconverger only fetches on boot, so if an update is pushed, an already
running system needs effectively **two** boots, one to fetch, and one to apply
the changes to come up on the revision.

In practice a lot of machines are shutdown overnight. So for example an update
that is pushed on a Monday afternoon, would be downloaded on the Tuesday boot
and applied on the Wednesday boot.

We want to get this time down. For example an option that syncronously checks
for updates and reboots immediately for security concious deployments.

# no_updates disables upgrades

Disabling upgrades will disable Webconverger from doing a `git fetch` on boot.

# Notes on validation

* using hashes as update_revision, you'll do a sort of implicit validation
* signed tags might be useful, but we'll have to have some way to circumvent that so we can push debug revisions without having to tag all of them
* use https:// instead of git://
