[[!meta title="Webconverger's boot API"]]

Webconverger heavily uses the notion of `/proc/cmdline` to control setup.
[Spaces in cmdline
values](http://stackoverflow.com/questions/993452/splitting-proc-cmdline-arguments-with-spaces)
need to be `encodeURI` in order not be considered keys themselves. For
developers, [[startup]] might better explain how these are used.

There are two ways to start using the API, firstly by hitting TAB on the boot screen.

<img src="/img/webc-boot.png" alt="Syslinux boot menu, press TAB" />

Or by using the [configuration service](http://config.webconverger.com/) form
which you need to take a subscription out with Webconverger. The service
presents the various options below in a friendly Web form on boot, with added
persistency so your values are retained between boots once subscribed.

### Your own homepage

Edit `homepage=`

You can enter several homepages, which will open in several tabs, separate each
address with `%20` e.g.
`homepage=http://portal.webconverger.com/%20http://webconverger.com`

#### Homepage MACID query

Some customers want a way of tracking which kiosks are logging in. These is best accomplished using a keyword **MACID**. For example the homepage:

	homepage=http://webconverger.com/?mac=MACID

Could be expanded to

	homepage=http://webconverger.com/?mac=081196ae2d3c

### Use Webconverger in a different language to English

Please refer to [[i18n]]

### How to change the Webconverger branding?

Please see [[artwork]]

### Specify a HTTP proxy at 192.168.1.5 with port 8888

append `http_proxy=http://192.168.1.5:8888`

### How do I make the screen not timeout and go black?

Append `noblank`, see [[blanking]] for more.

### How do I make the screen reset after being used?

Use `kioskresetstation`, see [[blanking]] for more information

### Rotate the screen and maybe drop a resolution?

Study the [xrandr manpage](http://manpages.debian.net/cgi-bin/man.cgi?query=xrandr) to create powerful commands to setup your screen.

For example, append `xrandr=-o%20right%20-s%20800x600`

Which equates to running `xrandr -o right -s 800x600` in DEBUG mode.

To encode your options, use encodeURI from your browser console:

	encodeURI("-o right -s 800x600")

Another approach to setting screen resolutions is using `xrandr` syntax like:

	xrandr --output LVDS1 --mode 1366x768

However using this approach requires some knowledge of the display name. It
could be LVDS1, HDMI1 or VGA1. Hence you need to figure this line out in the
**debug** mode.

### DEBUG MODE for developers

Append `debug`.

Once Webconverger is booted, the [dwm window
manager](http://dwm.suckless.org/tutorial) defaults to shift+alt+enter for a
Terminal. Gain root with `sudo -i`.

On the install version, you need to type `boot: l0 debug` to trigger debug
mode.

### Disable configuration service

Append `noconfig`

### How do I make the machine turn off at a set time everyday?

Set a [[cronjob]]

### Overriding DNS

Preferably you set this in your DHCPD, however you can overide for example for
[[filtering]] the DNS servers are:

	dns=8.8.8.8,8.8.4.4

This is implemented by [resolvconf script](https://github.com/Webconverger/webc/blob/master/etc/webc/network-up.d/resolvconf)

### Changing [[browser_chrome|kiosk]]

* chrome=webcnoaddressbar - disable URL bar and search bar, good for [[controlled_access_setups|filtering]]
* chrome=webcfullscreen - fullscreen

### Changing [closeicon](https://github.com/Webconverger/Debian-Live-config/blob/master/webconverger/config/includes.chroot/home/webc/iwcloseconfig.sh)

This a bit nitpicky and maybe dropped from the API, but here goes:

* closeicon=active - Close button only on the active tab, except when there is only one tab
* closeicon=activefix - Close button only on the active tab, including the last tab
* closeicon=every - Close button on every tab, except when there is only one tab
* closeicon=everyfix - Close button on every tab, even when there is only one tab
* closeicon=none - No close buttons
* closeicon=strip - Close button on the end of the tab strip

### Wireless configuration

Although wired connections are preferred, Webconverger does have
comprehensive [[support_for_wireless_devices|wireless]] and
[[blog/entry/USB_tethering]].
