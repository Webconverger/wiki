# [CTRL]+[p]

Webconverger utilises CUPS 1.5 which auto-detects CUPS <1.6 servers using
"BrowsePoll" for CUPS Browsing for sharing and discovery. This "auto setup"
feature is [removed in CUPS
1.6](http://cups.org/newsgroups.php?s25812+gcups.general+v25830+T0).

Holding down the [Control] and [p] keys on your keyboard gives you the printing
dialog. Or you can use the `showprintbutton` [[API]] to show a print icon to
your users.

[Mozilla Firefox printing guidelines.](https://support.mozilla.org/en-US/kb/how-print-websites)

If you do **not see your printer in that dialog** and you just see "Print to
File", _your_ print server is **not correctly configured**. [Sorry about the Print to File, we know it is mis-leading and we are trying to remove it](https://github.com/Webconverger/webc/issues/135).

So unfortunately [the user experience of just using detected "auto setup" printers is no longer
supported in
CUPS](http://cups.org/newsgroups.php?s25831+gcups.general+v25832+T1). You now
need to "Add printer..." up front, and hence we have introduced the `printer=`
API for you to do this.

In BETA: [the printer= API](https://github.com/Webconverger/webc/issues/145)

	printer=printer name,device URI,driver URI

For example a Ricoh Aficio SP 4310N with [PPD](http://en.wikipedia.org/wiki/PostScript_Printer_Description) on IP 192.168.1.5 might be setup like so:

	printer=lab1,http://192.168.1.5/printer,http://ppd.webconverger.com/ricoh.ppd

Instead of specifying a remote [PPD](http://en.wikipedia.org/wiki/PostScript_Printer_Description), you could use the internal (generic) drivers `lpinfo -m` [list](http://ix.io/4Mf).

For example a network printer 192.168.1.10 named "helpdesk" with dns name
printer is very likely to have "Laser printer"
[PCL](http://en.wikipedia.org/wiki/Printer_Command_Language) support:

	printer=helpdesk,socket://printer,drv:///sample.drv/generpcl.ppd

However if your printer supports PostScript, you might find using the "Generic
PostScript Printer" driver `drv:///sample.drv/generic.ppd` result in better
quality prints.

# Two typical printing configurations

## Using a network printer

Buy a printer with a **network port**. These printers are generally more
expensive and _generally_ have IPP support built in. Some do not have an IPP
print server or [are simply
buggy](http://cups.org/newsgroups.php?s25812+gcups.general+v25827+T1). So make
sure you purchase it with a good exchange / refund policy.

<http://www.cups.org/documentation.php/network.html>

Discovering the "device URI" can be alarmingly difficult. As a last resort,
socket://$PRINTER_IP_ADDRESS will probably work.

## Using a CUPS server with (attached) printer shared upon it

Buy a printer and attach it to a MacOSX / Ubuntu / Windows PC. Proceed to
install drivers and most importantly the [CUPS print server
software](http://cups.org/).  Then configure the CUPS server to be shared upon
the network.

On a CUPS server, important elements to enable are:

* Show printers share by other systems
* Share published printers connect to this system

These options basically set **Browsing On** and some Allow IP filters usually for your local network.

If you are using a [CUPS 1.6 printer
server](http://s.natalian.org/2013-03-19/cupsd.conf), you can workaround the
lack of Browse polling by configuring your clients with a
`/etc/cups/client.conf` with a:

	Servername Your_CUPS_server_IP

# prefs= API to remove default header and footer

The prefs= API allows you to override Firefox preferences.

For example `prefs=http://ppd.webconverger.com/2013/ricoh.js` removes header/footer for the printer named 'Ricoh'.

A pref such as:

	pref("pdfjs.disabled", true);

Disables the default pdfjs PDF viewer.

# Debugging

<https://fedoraproject.org/wiki/How_to_debug_printing_problems>

<a href="http://www.flickr.com/photos/hendry/5150959996/" title="CUPs by Kai Hendry, on Flickr"><img src="http://farm5.static.flickr.com/4006/5150959996_675ce18439.jpg" width="500" height="375" alt="CUPs" /></a>

If you see for an example: `cupsdAuthorize: No authentication data provided.`,
that means you are restricting access. Here is an [example of printing server
which permits everything](http://static.natalian.org/2009-06-07/cupsd.conf).

Assuming you are running a Virtualbox instance, sharing a bridged adaptor. On the host 192.168.1.3 with the Virtualbox on 192.168.1.136:

	sudo tcpdump -w /tmp/foo.pcap -s 0 -n -i wlan0 dst 192.168.1.136 and not port 53

	wireshark -r /tmp/foo.pcap

# Printing to a [PDF file](http://en.wikipedia.org/wiki/PDF) to a remote machine on your network

<a href="http://www.flickr.com/photos/hendry/3605150186/" title="CUPS-PDF by Kai Hendry, on Flickr"><img src="http://farm4.static.flickr.com/3413/3605150186_3037f2b36f.jpg" width="500" height="375" alt="CUPS-PDF" /></a>

The [cups-pdf](http://packages.qa.debian.org/c/cups-pdf.html) package allows
you to setup a "Virtual Print" server on your network that write out PDFs on
your server's spool directory.

This is useful for archiving, debugging and allowing you to manually check what
does and does not get printed.

Assuming you have a [permissive configured
CUPS](http://s.natalian.org/2013-03-19/cupsd.conf) with cups-pdf installed, you
need to figure the IP address or name (e.g. 192.168.0.1) of your print server, that can be
accessed by your clients. To find the device URI of your CUPS printer, it's the
"Queue Name" URL in the Administration Tab &rarr; Manage Printers, see the
[highlighted device URI screenshot](/img/highlighted-printer-device-uri.png).

Once you know the printer's device URI, you then setup your Webconverger
clients like so:

	printer=PDF,http://192.168.0.1:631/printers/Virtual_PDF_Printer,drv:///sample.drv/generic.ppd

On the print server, you should be able to see "Send-Document successful-ok"
whilst examing the log like so `tail -f /var/log/cups/access_log`.
